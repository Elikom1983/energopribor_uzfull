# Generated by Django 5.2.6 on 2025-10-05 20:01

import ckeditor.fields
import django.db.models.deletion
import parler.fields
import parler.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Slug')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MetaWords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta', models.CharField(max_length=255, verbose_name='Meta')),
            ],
            options={
                'verbose_name': 'Meta Word',
                'verbose_name_plural': 'Meta Words',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('address_line', models.CharField(max_length=150)),
                ('delivery_type', models.CharField(choices=[('kuryer', 'Kuryer orqali'), ('olib ketish', 'O‘zim olib ketaman')], max_length=50)),
                ('payment_method', models.CharField(choices=[('naqd', 'Naqd to‘lov'), ('online', 'Online to‘lov (Payme/Click)'), ('transfer', 'Pul o‘tkazish (bank orqali)')], max_length=50)),
                ('comment', models.TextField(blank=True, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('transfer_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='O‘tkazilgan summa')),
                ('transfer_receipt', models.ImageField(blank=True, null=True, upload_to='transfers/', verbose_name='To‘lov cheki (rasm)')),
                ('resolved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta', models.TextField(blank=True, max_length=200, null=True, verbose_name='Meta')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Slug')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='Price')),
                ('discount', models.PositiveIntegerField(default=0, verbose_name='Discount (%)')),
                ('image', models.ImageField(upload_to='photos/products', verbose_name='Main Image')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available')),
                ('top', models.BooleanField(default=False, verbose_name='Top')),
                ('new', models.BooleanField(default=False, verbose_name='Yangi')),
                ('v_nalichi', models.BooleanField(default=True, verbose_name='So`tuvda mavjud')),
                ('download', models.FileField(blank=True, null=True, upload_to='downloads/')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='store.attribute')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_values', to='store.product')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='photos/products/gallery', verbose_name='Gallery Image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='store.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Gallery',
            },
        ),
        migrations.CreateModel(
            name='AttributeTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=200, verbose_name='Attribute Name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='store.attribute')),
            ],
            options={
                'verbose_name': 'attribute Translation',
                'db_table': 'store_attribute_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductAttributeValueTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('value', models.CharField(db_index=True, max_length=200, verbose_name='Value')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='store.productattributevalue')),
            ],
            options={
                'verbose_name': 'product attribute value Translation',
                'db_table': 'store_productattributevalue_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('product_name', models.CharField(max_length=200, unique=True, verbose_name='Product Name')),
                ('description', ckeditor.fields.RichTextField(blank=True, verbose_name='Description')),
                ('short_description', models.TextField(blank=True, max_length=330, verbose_name='Short Description')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Title')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='store.product')),
            ],
            options={
                'verbose_name': 'Product Translation',
                'db_table': 'store_product_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlisted_by', to='store.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'product')},
            },
        ),
    ]
